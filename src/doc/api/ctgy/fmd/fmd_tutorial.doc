/******************************************************************************
 * $Id: bsn_fmd.hpp 2018-1 $
 *
 * Project:  Hub api.
 * Purpose:  Gda tutorial.
 * Author:   Weiwei Huang, 898687324@qq.com
 *
 ******************************************************************************
 * Copyright (c) 2018-1 ~ 2018, Weiwei Huang
 *
 * This program is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the Free 
 * Software Foundation, either version 3 of the License, or (at your option) 
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for 
 * more details.
 *
 * You should have received a copy of the GNU General Public License along 
 * with this program.  If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************************/

/**
\page fmd_tutorial FMD Tutorial
fmd: Fire model.

Init: Initilize the fmd module.
\code
UErrCodeT CBsnFmd::Init()
{
    BMD_MODULE(mFmd, CFmdCtl, HubMFmd);

    return UErrFalse;
}
\endcode

Config: Configure the environment of the sences.
\code
UErrCodeT CBsnFmd::TestConfig()
{
    CFmdFileCtl *fileCtl = mFmd->File();
    const UStringT fileName = "../../data/ctgy/fmd/3/1.input";
    CFmdFileCfg *cfg = fileCtl->Cfg(&fileName, FmdFileCfgCreate);
    CFmdCfgWrite *cfgWrite = cfg->Write();

    FmdCfgBurnTimeT time;
    FmdCfgTimeT begin;
    begin.SetAll(2017, 8, 1, 9, 30);
    FmdCfgTimeT end;
    end.SetAll(2017, 8, 1, 13, 50);
    time.SetAll(&begin, &end, 10);
    cfgWrite->SetBurnTime(&time);

    FmdCfgWeatherCtnT weatherCtn(UContainerList);
    FmdCfgWeatherT weather;
    FmdCfgTimeT weatherTime;
    weatherTime.SetAll(2017, 8, 1, 9, 30);
    FmdCfgWindT weatherWind;
    weatherWind.SetAll(10, 125);
    FmdCfgCloudT weatherCloud;
    weatherCloud.SetAll(0, 0);
    FmdCfgAirT weatherAir;
    weatherAir.SetAll(0, 0);
    weather.SetAll(&weatherTime, &weatherWind, &weatherCloud, &weatherAir);
    weatherTime.SetAll(2017, 8, 1, 13, 30);
    weatherCtn.Add(weather);
    weather.SetAll(&weatherTime, &weatherWind, &weatherCloud, &weatherAir);
    weatherCtn.Add(weather);
    cfgWrite->SetWeather(&weatherCtn);

    UFloatT elevation = 0.0;
    cfgWrite->SetElevation(elevation);

    FmdCfgFuelMoistureCtnT fmCtn(UContainerList);
    FmdCfgFuelMoistureT fm;
    // fm.SetAll(0, 3, 4, 6, 70, 100);
    fm.SetAll(0, 2, 2, 2, 2, 2);
    fmCtn.Add(fm);
    cfgWrite->SetFuelMoisture(&fmCtn);
    cfgWrite->Save();

    return UErrFalse;
}
\endcode

\include bsn_fmd.cpp
*/